server:
  port: 8083

spring:
  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST:postgres}:5432/${POSTGRES_DB:order_service}
    username: ${POSTGRES_USER:postgres}
    password: ${POSTGRES_PASSWORD:postgres}
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
  kafka:
    bootstrap-servers: ${KAFKA_SERVERS:kafka:29092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

# Feign Client Configuration
feign:
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 5000
        loggerLevel: basic

# Circuit Breaker Configuration
resilience4j:
  circuitbreaker:
    instances:
      inventory:
        sliding-window-size: 10
        sliding-window-type: COUNT_BASED
        failure-rate-threshold: 50
        wait-duration-in-open-state: 5s
        permitted-number-of-calls-in-half-open-state: 3
        register-health-indicator: true
      product:
        sliding-window-size: 10
        sliding-window-type: COUNT_BASED
        failure-rate-threshold: 50
        wait-duration-in-open-state: 5s
        permitted-number-of-calls-in-half-open-state: 3
        register-health-indicator: true
  timelimiter:
    instances:
      inventory:
        timeout-duration: 3s
      product:
        timeout-duration: 3s
  retry:
    instances:
      inventory:
        max-attempts: 3
        wait-duration: 500ms
      product:
        max-attempts: 3
        wait-duration: 500ms

logging:
  level:
    com.ethann.orderservice: INFO